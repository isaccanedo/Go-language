Optimizations in Go
Lesson 9
25 Sep 2023
Tags: golang, go

Pavel Tišnovský
Red Hat, Inc.
email@email.email
https://github.com/RedHatOfficial/GoCourse
@RedHat



* Sources
- [[https://github.com/RedHatOfficial/GoCourse]]
.image ./common/qr_address.png



* Gophers
#The Go gopher was designed by Renee French. (http://reneefrench.blogspot.com/)
#Source https://golang.org/doc/gopher/fiveyears.jpg
#The design and this image is licensed under the Creative Commons 3.0 Attributions license.
.image ./common/fiveyears.jpg _ 900



* Optimizations in Go
- pass structures by reference, not by value

* Pass structures by reference, not by value
- all data types are passed by value into functions and methods
- that's good from "state-space" perspective
- not so good from performance point of view
- (and no nice solution like `const` and `mut` exists in Go)

* Problem definition
- Large structures passed by value everywhere in the code
- Even within inner loops
- It causes overhead that is easy to avoid

* Real example

* Is it worth to do it?
